
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Для Каждого Строка Из ОсновныеНачисления Цикл
		Если Строка.ДатаНачала > Строка.ДатаОкончания Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке №%1 дата начала больше даты окончания",
				Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли;

		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ВКМ_ФиксированнаяПремия Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке %1 указан вид расчета Фиксированная пермия, для данного вида расчета используется другой документ", Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	Для Каждого Строка Из ОсновныеНачисления Цикл
		
		Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ВКМ_ПроцентОтРабот Тогда
			//Регистр ВКМ_ДополнительныеНачисления
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.ВидРасчета = Строка.ВидРасчета;
			Движение.ПериодРегистрации = Дата;
		Иначе
			//Регистр ВКМ_ОсновныеНачисления	
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ВидРасчета = Строка.ВидРасчета;
			Движение.ПериодДействияНачало = Строка.ДатаНачала;
			Движение.ПериодДействияКонец = Строка.ДатаОкончания;
			Движение.ПериодРегистрации = Дата;
			Движение.Сотрудник = Строка.Сотрудник;
			Движение.ГрафикРаботы = Строка.ГрафикРаботы;
			Если Строка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Отпуск Тогда
				Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ДатаНачала, -12));
				Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ДатаОкончания, -1));
			Иначе
				Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
				Движение.БазовыйПериодКонец = КонецМесяца(Дата);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
	//Запишем движения в регистр Удержания, пока без суммы
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник
//	|	|	МИНИМУМ(ВКМ_НачислениеЗарплатыОсновныеНачисления.ДатаНачала) КАК ДатаНачала,
//	|	|	МИНИМУМ(ВКМ_НачислениеЗарплатыОсновныеНачисления.ДатаОкончания) КАК ДатаОкончания
	|ИЗ
	|	Документ.ВКМ_НачислениеЗарплаты.ОсновныеНачисления КАК ВКМ_НачислениеЗарплатыОсновныеНачисления
	|ГДЕ
	|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.ВКМ_НДФЛ;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
	//Расчет процента от работ
	РассчитатьПроцент();
	
	//Расчет оклада с учетом отработанных дней
	РасчитатьОклад();
	
	//Расчет отпускных
	РасчитатьОтпуск();
	
	//Расчет сумм удержаний по НДФЛ
	РасчитатьНДФЛ();
	
	//Запись в регистр ВКМ_ВзаиморасчетыССотрудниками
	СформироватьДвиженияВзаиморасчетыССотрудниками();
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура РассчитатьПроцент()
	
	Если Движения.ВКМ_ДополнительныеНачисления.Количество() > 0 Тогда

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплатеОборот,
	|	ВКМ_ДополнительныеНачисления.НомерСтроки,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(НАЧАЛОПЕРИОДА(&Дата, Месяц), КОНЕЦПЕРИОДА(&Дата, Месяц),
	|		Месяц, Сотрудник В
	|		(ВЫБРАТЬ
	|			ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник
	|		ИЗ
	|			Документ.ВКМ_НачислениеЗарплаты.ОсновныеНачисления КАК ВКМ_НачислениеЗарплатыОсновныеНачисления
	|		ГДЕ
	|			ВКМ_НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник
	|			ИЗ
	|				Документ.ВКМ_НачислениеЗарплаты.ОсновныеНачисления КАК ВКМ_НачислениеЗарплатыОсновныеНачисления
	|			ГДЕ
	|				ВКМ_НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник = ВКМ_ДополнительныеНачисления.Сотрудник
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|	И
	|		ВКМ_ДополнительныеНачисления.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ДополнительныеНачисления.ВКМ_ПроцентОтРабот)";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Процент = Выборка.ПроцентОтРабот;
		Движение.Результат = Выборка.СуммаКОплатеОборот;
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать(, Истина);
	
	КонецЕсли;

КонецПроцедуры

 Процедура РасчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейФактическийПериодДействия, 0) КАК ОтработаноДней,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейПериодДействия КАК ДнейПериодДействия
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
	|	И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Оклад)) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник
	|			ИЗ
	|				Документ.ВКМ_НачислениеЗарплаты.ОсновныеНачисления КАК ВКМ_НачислениеЗарплатыОсновныеНачисления
	|			ГДЕ
	|				ВКМ_НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ОтработаноДней = Выборка.ОтработаноДней;
		
		Если Выборка.ДнейПериодДействия = Выборка.ОтработаноДней Тогда
			Движение.Результат = Выборка.Оклад;
		Иначе
			Движение.Результат = (Выборка.Оклад / Выборка.ДнейПериодДействия) * Выборка.ОтработаноДней;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры
 
 Процедура РасчитатьОтпуск()
 	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК База,
	|	РАЗНОСТЬДАТ(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияНачало,
	|		ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияКонец, ДЕНЬ) + 1 КАК ФактДней,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза КАК ОтработаноДнейБаза,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,, Регистратор = &Ссылка
	|	И ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Отпуск)) КАК
	|		ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Показатель = Выборка.База / Выборка.ОтработаноДнейБаза;
		Движение.Показатель = Показатель;
		Движение.Результат = Выборка.ФактДней * Движение.Показатель;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры
 
 Процедура РасчитатьНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки,
	|	УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза
	|ПОМЕСТИТЬ ВТ_ОснУдерж
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, &Разрезы, Регистратор = &Ссылка) КАК
	|		УдержанияБазаВКМ_ОсновныеНачисления
	|ГДЕ
	|	УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УдержанияБазаДополнительныеНачисления.НомерСтроки,
	|	УдержанияБазаДополнительныеНачисления.РезультатБаза
	|ПОМЕСТИТЬ ВТ_ДопУдерж
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы,
	|		Регистратор = &Ссылка) КАК УдержанияБазаДополнительныеНачисления
	|ГДЕ
	|	УдержанияБазаДополнительныеНачисления.РегистраторРазрез = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ОснУдерж.НомерСтроки, ВТ_ДопУдерж.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(ВТ_ОснУдерж.РезультатБаза, 0) КАК ОснРезультатБаза,
	|	ЕСТЬNULL(ВТ_ДопУдерж.РезультатБаза, 0) КАК ДопРезультатБаза
	|ИЗ
	|	ВТ_ОснУдерж КАК ВТ_ОснУдерж
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ДопУдерж КАК ВТ_ДопУдерж
	|		ПО ВТ_ОснУдерж.НомерСтроки = ВТ_ДопУдерж.НомерСтроки";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");

	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");

	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Разрезы", Разрезы);

	Выборка = Запрос.Выполнить().Выбрать();
	
	НДФЛ = 13;

	Пока Выборка.Следующий() Цикл

		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		Движение.Результат = (Выборка.ОснРезультатБаза + Выборка.ДопРезультатБаза) * НДФЛ / 100;

	КонецЦикла;

	Движения.ВКМ_Удержания.Записать( , Истина);
	
КонецПроцедуры

Процедура СформироватьДвиженияВзаиморасчетыССотрудниками()
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.Сотрудник КАК СотрудникОснНач,
	|	СУММА(ВКМ_ОсновныеНачисления.Результат) КАК РезультатОснНач
	|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.Сотрудник КАК СотрудникДопНач,
	|	СУММА(ВКМ_ДополнительныеНачисления.Результат) КАК РезультатДопНач
	|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ДополнительныеНачисления.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_Удержания.Сотрудник КАК СотрудникУдержания,
	|	СУММА(ВКМ_Удержания.Результат) КАК РезультатУдержания
	|ПОМЕСТИТЬ ВТ_Удержания
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_Удержания.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ВТ_ДополнительныеНачисления.РезультатДопНач, 0) КАК РезультатДопНач,
	|	ЕСТЬNULL(ВТ_ОсновныеНачисления.РезультатОснНач, 0) КАК РезультатОснНач,
	|	ЕСТЬNULL(ВТ_Удержания.РезультатУдержания, 0) КАК РезультатУдержания
	|ИЗ
	|	Документ.ВКМ_НачислениеЗарплаты.ОсновныеНачисления КАК ВКМ_НачислениеЗарплатыОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
	|		ПО ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник = ВТ_ОсновныеНачисления.СотрудникОснНач
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДополнительныеНачисления КАК ВТ_ДополнительныеНачисления
	|		ПО ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник = ВТ_ДополнительныеНачисления.СотрудникДопНач
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
	|		ПО ВКМ_НачислениеЗарплатыОсновныеНачисления.Сотрудник = ВТ_Удержания.СотрудникУдержания
	|ГДЕ
	|	ВКМ_НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Сумма = Выборка.РезультатОснНач + Выборка.РезультатДопНач - Выборка.РезультатУдержания;
		Движение.Сумма = Сумма;
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
			
КонецПроцедуры

#КонецОбласти

#КонецЕсли
